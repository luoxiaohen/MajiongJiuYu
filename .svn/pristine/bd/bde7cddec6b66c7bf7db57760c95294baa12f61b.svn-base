{"version":3,"sources":["assets\\Script\\proto\\TableMsg.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BaseIDMsg, BaseMsg, MSG_MID } from \"./BaseMsg\";\r\nimport { PlayerInfo } from \"./LobbyMsgDef\";\r\nimport { RcdSummUnit } from \"./MahjStepMsgDef\";\r\nimport { FinalPlayerCalcInfo, GameResultInfo, GameScoreInfo, HorserInfo, HorserTableInfo, HorseSelInfo, MsgMajSer, RoomTableInfo, ScoreEventInfo, SitDiceInfo, SitInfo, SitQueInfo } from \"./TableMsgDef\";\r\n\r\n\r\n\r\n\r\n/**\r\n* Created by admin on 2022/5/30.\r\n*/\r\nexport class TableMsg extends BaseMsg{\r\n}\r\n\r\nexport enum TabMSG_SID {\r\n\tSC_TabErrRlst,                  // 0返回执行错误\r\n\tSC_OnTable,                     // 1返回房间号，进入某个房间后的决定性消息\r\n\tSC_RoomInfo,                    // 2返回房间信息\r\n\tCS_FindEnterRoom,                   // 3搜索进入房间 - 返回 TableMsg.SC_RoomInfo\r\n\tCS_SitDown,                         // 4入座某个位置\r\n\tSC_SitOK,                       // 5成功入座某个位置\r\n\tCS_Ready,                           // 6准备好了\r\n\tSC_Ready,                       // 7广播准备好了\r\n\tCS_LeaveRoom,                       // 8离开房间\r\n\tSC_OneSit,                      // 9广播某人上桌\r\n\tSC_OneLeave,                    // 10广播某人离开\r\n\t\r\n\t// 牌局\r\n\tSC_StartDiceEast,               // 11开始定庄\r\n\tSC_StartDicePos,                // 12开始定位\r\n\tSC_StartDiceGame,               // 13刷新新的位置。\r\n\tSC_BeginDiceMsg,                // 14开始牌局，需要庄家掷骰子决定开始\r\n\tCS_PressDice,                       // 15按下骰子，只在定位置时用\r\n\tSC_PressDice,                   // 16广播按下骰子消息\r\n\tCS_DoDice,                          // 17掷骰子（暂考虑通用的）类似手松开\r\n\tSC_DiceRslt,                    // 18掷骰子结果\r\n\tSC_PrDiceRslt,                  // 19掷个人骰子结果\r\n\tSC_StartGame,                   // 20开始游戏，发牌\r\n\tSC_YouMajMsg,                   // 21单独，你的牌（发牌结果）\r\n\t\r\n\tSC_StartChange3,                // 22通知客户端开始换三张\r\n\tCS_Change3Maj,                      // 23换三张\r\n\tSC_Change3Maj,                  // 24换三张同步动作，包含剩余未扣牌人数（=0自动开始倒计时掷骰子）\r\n\tSC_You3Maj,                     // 25换三张的结果\r\n\tSC_StartDingQue,                // 26通知客户端开始定却\r\n\tCS_DingQue,                         // 27定却\r\n\tSC_DingQue,                     // 28定却操作动作\r\n\tSC_QueRslt,                     // 29定却结果，之后自动开始出牌\r\n\t\r\n\tSC_SomeTurnMsg,                 // 30广播该谁，同时摸牌\r\n\tSC_WaitDownMsg,                 // 31广播该谁出牌\r\n\tSC_GetMajMsg,                   // 32单独，你的牌：所得牌，得牌方式\r\n\tSC_WaitYou,                     // 33判断客户端有胡碰杠，告知客户端等待对方消息（需要过、碰杠、胡中一个）(别人出牌触发)\r\n\tCS_PassMsg,                         // 34过\r\n\tCS_DownMajMsg,                      // 35出牌\r\n\tSC_DownMajMsg,                  // 36广播，出牌\r\n\tCS_PengMajMsg,                      // 37碰或杠  -针对别人打出来的\r\n\tSC_PengMajMsg,                  // 38广播碰或杠\r\n\tCS_GangSelfMsg,                     // 39自己杠  -针对自己摸上来的\r\n\tSC_GangSelfMsg,                 // 40广播自己杠\r\n\tSC_HasHuGangMsg,                // 41告知当前杠牌的人，有人抢杠，需等待别人抢胡操作，同时告知能够胡牌的SC_WaitYou消息\r\n\tCS_HuMajMsg,                        // 42胡牌\r\n\tSC_HuMajMsg,                    // 43广播胡牌\r\n\tCS_UpdateHands,                     // 44请求手牌信息   -----\r\n\tSC_UpdateHands,                 // 45刷新手牌信息   -----\r\n\tCS_GetGameResultMsg,                // 46获取游戏结果   --暂时不用，服务器会主动推送下面消息\r\n\tSC_GameResultMsg,               // 47一把游戏结束结果（流局，所有人手牌）\r\n\tCS_GetScoreListMsg,                 // 48获取积分列表   -- 可用，服务器也会主动推送\r\n\tSC_ScoreListMsg,                // 49积分列表\r\n\tCS_NextTrun,                        // 50下一手\r\n\tSC_GameOverMsg,                 // 51整局游戏结束结果\r\n\tSC_RealScore,                   // 52实时计分消息(胡杠时发生)\r\n\t\r\n\tSC_UpdatePlayerInfo,            // 53刷新某个玩家信息(在桌的)\r\n\tSC_SyncGameState,               // 54重新上线，同步当前牌局\r\n\tCS_RqCloseGame,                     // 55申请关闭房间\r\n\tSC_RqCloseGame,                 // 56广播有人申请关房\r\n\tCS_VoteCloseGame,                   // 57投票关闭房间\r\n\tSC_VoteRslt,                    // 58投票状态(仅同意)\r\n\tSC_VoteCloseRslt,               // 59投票结果广播\r\n\tSC_PoolsList,                   // 60牌墙剩余牌列表(GM:getpools)\r\n\tSC_BuGanging,                   // 61广播有人要补杠\r\n\tSC_RqCloseGameErr,              // 62发起投票处于冷却时间\r\n\t\r\n\tCSC_TestTimeMsg,                    // 63测试时间消息 for test\r\n\t\r\n\tCS_AddMahjRcd,                      // 64增加一条牌谱记录\r\n\tSC_NewMahjRcd,                  // 65新增一条牌谱\r\n\t\r\n\tCS_ReqBuyHorse,                     // 66申请买马\r\n\tCS_CancelBuyHorse,                  // 67取消买马\r\n\tSC_UpdateHorser,                // 68刷新买马者信息（通用，只要改变都刷新，包括庄家买马）\r\n\tSC_StartSelHorse,               // 69通知开始选马牌(用于庄家买马房间的流程里)\r\n\tCS_SelHorse,                        // 70玩家选马牌(用于庄家买马房间的流程里)\r\n\tSC_SelHorseRslt,                // 71广播选马牌结果（所有人选完以后统一广播）\r\n\t\r\n\tSC_HorseRoomInfo,               // 72买马后的给买马者单独推送的房间信息\r\n\tSC_NewHorseScoreRslt,           // 73买马战绩，一手结束后给买马者单独推送的信息\r\n\tSC_HorseRoomState,              // 74给买马者单独推送的房间状态和结算信息\r\n\tSC_CancelBuyHorse,              // 75给买马者单独推送的取消买马信息\r\n\t\r\n\tCS_Fan3Tin,                         // 76出现3番下叫，每手牌出现发送一次（只有3番时才发送，用于统计）\r\n\tSC_LimitHuPeng,                 // 77出现受限制的胡碰消息（因过手胡过手碰和2分起胡限制的胡碰消息）\r\n\tSC_NextTrunOK,                  // 78广播谁点了下一手\r\n\tMSG_MAX\r\n}\r\n\r\n// 返回执行错误\r\nexport class Msg_SC_TabErrRlst extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_TabErrRlst ); }\r\n\t\r\n\tpublic      errCode: number;    // 返回错误信息枚举（SrvsMsgDef.SrvsErrCode）\r\n\tpublic   strMsg: string;     // 扩展一个字符串信息\r\n\tpublic      val: number;        // 扩展一个整型数据\r\n}\r\n\r\n//返回房间号，进入某个房间后的决定性消息\r\nexport class Msg_SC_OnTable extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_OnTable ); }\r\n\tpublic   tid: string;        // 牌桌唯一编码\r\n}\r\n\r\n//返回房间信息\r\nexport class Msg_SC_RoomInfo extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_RoomInfo ); }\r\n\tpublic    info: RoomTableInfo;       // 牌桌信息\r\n\tpublic    players: SitInfo[];    // 玩家列表\r\n\tpublic horsers: HorserInfo[];    // 买马者列表\r\n}\r\n\r\n//搜索进入房间 - 返回 TableMsg.SC_RoomInfo\r\nexport class Msg_CS_FindEnterRoom extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_FindEnterRoom ); }\r\n\tpublic      code: number;\r\n}\r\n\r\n//入座某个位置\r\nexport class Msg_CS_SitDown extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_SitDown ); }\r\n\tpublic      sit: number;            // 座位号（0-3=东北西南）4=自动找空位坐下\r\n}\r\n\r\n//成功入座某个位置\r\nexport class Msg_SC_SitOK extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_SitOK ); }\r\n\tpublic      sit: number;            // 座位号（0-3=东北西南）\r\n}\r\n\r\n//准备好\r\nexport class Msg_CS_Ready extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_Ready ); }\r\n}\r\n\r\n//广播准备好了\r\nexport class Msg_SC_Ready extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_Ready ); }\r\n\tpublic      okSit: number;                  // 完成准备座位号\r\n}\r\n\r\n//离开房间\r\nexport class Msg_CS_LeaveRoom extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_LeaveRoom ); }\r\n}\r\n\r\n//广播某人上桌\r\nexport class Msg_SC_OneSit extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_OneSit ); }\r\n\tpublic  newSit: SitInfo;     // 新的玩家信息\r\n}\r\n\r\n//广播某人离开\r\nexport class Msg_SC_OneLeave extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_OneLeave ); }\r\n\tpublic      sit: number;                    // 离开玩家的座位号\r\n}\r\n\r\n\r\n//开始定庄\r\nexport class Msg_SC_StartDiceEast extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartDiceEast ); }\r\n}\r\n\r\n//开始定位\r\nexport class Msg_SC_StartDicePos extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartDicePos ); }\r\n}\r\n\r\n//刷新新的位置\r\nexport class Msg_SC_StartDiceGame extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartDiceGame ); }\r\n\tpublic    diceInfos: SitDiceInfo[];   // 四人掷骰子结果\r\n\tpublic        players: SitInfo[];    // 刷新玩家位置\r\n}\r\n\r\n//开始牌局，需要庄家掷骰子决定开始\r\nexport class Msg_SC_BeginDiceMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_BeginDiceMsg ); }\r\n\tpublic bankerSite: number;      // 庄家座位号\r\n}\r\n\r\n//按下骰子，只在定位置时用\r\nexport class Msg_CS_PressDice extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_PressDice ); }\r\n}\r\n\r\n//广播按下骰子消息\r\nexport class Msg_SC_PressDice extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_PressDice ); }\r\n\tpublic      sit: number;        // 座位号（0-3=东北西南）\r\n}\r\n\r\n//掷骰子（暂考虑通用的）类似手松开\r\nexport class Msg_CS_DoDice extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_DoDice ); }\r\n}\r\n\r\n//掷骰子结果\r\nexport class Msg_SC_DiceRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_DiceRslt ); }\r\n\tpublic      bigNum: number;\r\n\tpublic      smlNum: number;\r\n}\r\n\r\n//掷个人骰子结果\r\nexport class Msg_SC_PrDiceRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_PrDiceRslt ); }\r\n\tpublic      bigNum: number;\r\n\tpublic      smlNum: number;\r\n\tpublic      sit: number;\r\n}\r\n\r\n//开始游戏，发牌\r\nexport class Msg_SC_StartGame extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartGame ); }\r\n\tpublic      diceBig: number;            // 骰子数1\r\n\tpublic      diceSmall: number;          // 骰子数2\r\n\tpublic      bankerSite: number;         // 桩位\r\n\tpublic      startHands: number;         // 第几手\r\n\tpublic      baozi: number;              // 是否有豹子(0=无；1=豹子；2=双豹)\r\n\tpublic      piaoSit: number;            // 飘家位置，没有飘家则 = -1\r\n\t\r\n\tpublic      horseType: number;          // 1=活马，2=死马\r\n\tpublic      horseMajNum1: number;       // 被买走的马位置号，没有 = -1\r\n\tpublic      horseMajNum2: number;       // 被买走的马位置号，没有 = -1\r\n}\r\n\r\n\r\n//单独，你的手牌（发牌结果）\r\nexport class Msg_SC_YouMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_YouMajMsg ); }\r\n\tpublic lstMajID: number[];           // 万条筒的顺序（1-29）*13\r\n}\r\n\r\n//通知客户端开始换三张\r\nexport class Msg_SC_StartChange3 extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartChange3 ); }\r\n}\r\n\r\n//换三张\r\nexport class Msg_CS_Change3Maj extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_Change3Maj ); }\r\n\tpublic lstMajID: number[];           // 换出三张牌\r\n}\r\n\r\n//换三张同步动作，包含剩余未扣牌人数（=0自动开始倒计时掷骰子）\r\nexport class Msg_SC_Change3Maj extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_Change3Maj ); }\r\n\tpublic      okSit: number;                  // 完成扣牌座位号\r\n\tpublic      remCnt: number;                 // 剩余未扣牌人数（=0自动开始倒计时掷骰子）\r\n}\r\n\r\n//换三张的结果\r\nexport class Msg_SC_You3Maj extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_You3Maj ); }\r\n\tpublic    lstOuts: number[];            // 换出三张牌\r\n\tpublic    lstMajID: number[];           // 换入三张牌\r\n\tpublic              bigNum: number;\r\n\tpublic              smlNum: number;\r\n\tpublic              type: number;               // 换三张的方式，也可以用上面的骰子推算（0=对换，1=顺时针；-1=逆时针）\r\n\tpublic              baozi: number;              // 最后修正豹子(0=无；1=豹子；2=双豹)\r\n}\r\n\r\n//通知客户端开始定却\r\nexport class Msg_SC_StartDingQue extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartDingQue ); }\r\n}\r\n\r\n//定却\r\nexport class Msg_CS_DingQue extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_DingQue ); }\r\n\tpublic      wtt: number;                    // 万条同（0-2）\r\n}\r\n\r\n//定却操作动作\r\nexport class Msg_SC_DingQue extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_DingQue ); }\r\n\tpublic      okSit: number;                  // 完成定却座位号\r\n}\r\n\r\n//定却结果\r\nexport class Msg_SC_QueRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_QueRslt ); }\r\n\tpublic infos: SitQueInfo[];\r\n}\r\n\r\n\r\n\r\n//广播该谁，同时摸牌\r\nexport class Msg_SC_SomeTurnMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_SomeTurnMsg ); }\r\n\tpublic siteNum: number;                     // 现在摸牌的玩家\r\n\tpublic remPoolsNum: number;                 // 摸后牌墙剩余数量\r\n}\r\n\r\n//广播该谁出牌\r\nexport class Msg_SC_WaitDownMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_WaitDownMsg ); }\r\n\tpublic siteNum: number;                     // 等待出牌的玩家\r\n}\r\n\r\n//单独，你的牌：所得牌，得牌方式\r\nexport class Msg_SC_GetMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_GetMajMsg ); }\r\n\tpublic majID: number;                       // 万条筒的顺序（1-29）\r\n\tpublic pickWay: number;                     // 取得方式（0-2=摸碰杠）\r\n}\r\n\r\n//判断客户端有胡碰杠，告知客户端等待对方消息（需要过、碰杠、胡中一个）\r\nexport class Msg_SC_WaitYou extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_WaitYou ); }\r\n\tpublic  type: number;                       //  按位取值：0x01=胡牌；0x02=碰杠\r\n}\r\n\r\n// 过\r\nexport class Msg_CS_PassMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_PassMsg ); }\r\n}\r\n\r\n//出牌\r\nexport class Msg_CS_DownMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_DownMajMsg ); }\r\n\tpublic majID: number;                       // 万条筒的顺序（1-29）\r\n}\r\n\r\n//广播，出牌\r\nexport class Msg_SC_DownMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_DownMajMsg ); }\r\n\tpublic downSiteNum: number;\r\n\tpublic majID: number;\r\n}\r\n\r\n//碰或杠\r\nexport class Msg_CS_PengMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_PengMajMsg ); }\r\n\tpublic isGang: number;                      // 0=碰，1=杠\r\n}\r\n\r\n//广播碰或杠\r\nexport class Msg_SC_PengMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_PengMajMsg ); }\r\n\tpublic pengSiteNum: number;                 // 碰或杠的位置\r\n\tpublic majID: number;                       // 牌ID\r\n\tpublic isGang: number;                      // 0=碰，1=杠\r\n\tpublic fromSiteNum: number;                 // 打出的位置\r\n}\r\n\r\n//自己杠\r\nexport class Msg_CS_GangSelfMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_GangSelfMsg ); }\r\n\tpublic majID: number;                       // 不一定是刚出现的，可能是原生的，所以需要指定\r\n}\r\n\r\n//广播自己杠\r\nexport class Msg_SC_GangSelfMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_GangSelfMsg ); }\r\n\tpublic pengSiteNum: number;                 // 杠的位置\r\n\tpublic isPapo: number;                      // 0=原手杠，1=碰了之后的杠\r\n\tpublic majID: number;\r\n}\r\n\r\n//告知有人抢杠\r\nexport class Msg_SC_HasHuGangMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_HasHuGangMsg ); }\r\n}\r\n\r\n//胡牌\r\nexport class Msg_CS_HuMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_HuMajMsg ); }\r\n}\r\n\r\n//广播胡牌\r\nexport class Msg_SC_HuMajMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_HuMajMsg ); }\r\n\tpublic      huSit: number;                  // 胡牌的位置\r\n\tpublic      zmType: number;                 // 0=平湖，1=自摸；2=杠上花；3=杠上炮；4=抢杠胡\r\n\tpublic      tarSit: number;                 // 点炮对象位置；如果是点杠花，这里就是点杠的人，如果是抢杠胡，这里是杠牌的人\r\n\tpublic      majID: number;                  // 自摸亮牌，或平胡时所胡的牌\r\n\tpublic      huNum: number;                  // 本次胡牌是第几批胡牌的，从0开始\r\n\tpublic      huCnt: number;                  // 本次胡牌的人数\r\n}\r\n\r\n//请求手牌信息\r\nexport class Msg_CS_UpdateHands extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_UpdateHands ); }\r\n}\r\n\r\n//刷新手牌信息\r\nexport class Msg_SC_UpdateHands extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_UpdateHands ); }\r\n\tpublic                lstHands: number[];   // 手牌列表\r\n\tpublic  lstPuts: MsgMajSer[];    // 碰杠牌列表（成型牌）\r\n}\r\n\r\n//获取游戏结果\r\nexport class Msg_CS_GetGameResultMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_GetGameResultMsg ); }\r\n\tpublic huSiteNum: number;                   // 胡牌位置\r\n\tpublic zm: number;                          // 1=自摸；2=平胡\r\n\tpublic huMajID: number;                     // 所胡的牌\r\n}\r\n\r\n//一把游戏结束结果（流局，所有人手牌）\r\nexport class Msg_SC_GameResultMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_GameResultMsg ); }\r\n\tpublic isBreak: number;                             // 1=打黄\r\n\tpublic results: GameResultInfo[];// 结算列表\r\n}\r\n\r\n//获取积分列表\r\nexport class Msg_CS_GetScoreListMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_GetScoreListMsg ); }\r\n}\r\n\r\n//积分列表\r\nexport class Msg_SC_ScoreListMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_ScoreListMsg ); }\r\n\tpublic  scores: GameScoreInfo[]; // 各玩家积分记录\r\n}\r\n\r\n//下一局\r\nexport class Msg_CS_NextTrun extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_NextTrun ); }\r\n}\r\n\r\n//整局游戏结束结果\r\nexport class Msg_SC_GameOverMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_GameOverMsg ); }\r\n\tpublic                                      handCnt: number;        // 实际进行手数\r\n\tpublic    calcInfos: FinalPlayerCalcInfo[];      // 总结算数据\r\n}\r\n\r\n// 实时计分消息(胡杠时发生)\r\nexport class Msg_SC_RealScore extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_RealScore ); }\r\n\tpublic event: ScoreEventInfo;\r\n}\r\n\r\n//刷新某个玩家信息(在桌的)\r\nexport class Msg_SC_UpdatePlayerInfo extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_UpdatePlayerInfo ); }\r\n\tpublic  sitInfo: SitInfo;     // 刷新的玩家信息\r\n}\r\n\r\n//重新上线，同步当前牌局\r\nexport class Msg_SC_SyncGameState extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_SyncGameState ); }\r\n\tpublic    info: RoomTableInfo;       // 牌桌信息\r\n\tpublic    players: SitInfo[];    // 玩家列表\r\n\tpublic horsers: HorserInfo[];    // 买马者列表\r\n\tpublic                          gameState: number;          // 当前状态，EMGameState\r\n\tpublic                          diceBig: number;            // 骰子数1\r\n\tpublic                          diceSmall: number;          // 骰子数2\r\n\tpublic                          bankerSite: number;         // 桩位\r\n\tpublic                          startHands: number;         // 第几手\r\n\t// 当前出牌位，当前所出的牌，当前牌墙剩余数\r\n\t// 个人手牌数量与碰杠列表\r\n\t// 牌池列表\r\n}\r\n\r\n//申请关闭房间\r\nexport class Msg_CS_RqCloseGame extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_RqCloseGame ); }\r\n}\r\n\r\n//投票关闭房间\r\nexport class Msg_CS_VoteCloseGame extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_VoteCloseGame ); }\r\n\tpublic      agree: number;      // 0=拒绝，1=同意\r\n}\r\n\r\n//广播有人申请关房\r\nexport class Msg_SC_RqCloseGame extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_RqCloseGame ); }\r\n\tpublic      rqSit: number;      // 申请者位置\r\n\tpublic      overSec: number;    // 默认同意倒计时时间，单位秒\r\n}\r\n\r\n//投票状态(仅同意)\r\nexport class Msg_SC_VoteRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_VoteRslt ); }\r\n\tpublic      sitAgree: number;      // 同意者位置\r\n}\r\n\r\n//投票结果广播\r\nexport class Msg_SC_VoteCloseRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_VoteCloseRslt ); }\r\n\tpublic      isClose: number;        // 0=有人拒绝不退出；1=投票关闭退出；\r\n\tpublic      refuseSit: number;      // 拒绝者位置\r\n}\r\n\r\n// 牌墙剩余牌列表(GM:getpools)\r\nexport class Msg_SC_PoolsList extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_PoolsList ); }\r\n\tpublic    pools: number[];  // 当前牌墙剩余牌\r\n}\r\n\r\n// 广播有人要补杠\r\nexport class Msg_SC_BuGanging extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_BuGanging ); }\r\n\tpublic      sit: number;\r\n\tpublic      majID: number;\r\n}\r\n\r\n// 发起投票处于冷却时间\r\nexport class Msg_SC_RqCloseGameErr extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_RqCloseGameErr ); }\r\n\tpublic      cdSec: number;      // 冷却剩余时间\r\n}\r\n\r\n\r\n// 测试时间消息\r\nexport class Msg_CSC_TestTimeMsg extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CSC_TestTimeMsg ); }\r\n\tpublic      cliSend: number;\r\n\tpublic      gateRcv: number;\r\n\tpublic      gateSend: number;\r\n\tpublic      tabRcv: number;\r\n\tpublic      tabSend: number;\r\n\tpublic      gateRcv2: number;\r\n\tpublic      gateSend2: number;\r\n}\r\n\r\n//增加一条牌谱记录\r\nexport class Msg_CS_AddMahjRcd extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_AddMahjRcd ); }\r\n\tpublic          handNum: number;    // 第几手，从0开始\r\n}\r\n\r\n//新增一条牌谱\r\nexport class Msg_SC_NewMahjRcd extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_NewMahjRcd ); }\r\n\tpublic   rcd: RcdSummUnit;\r\n}\r\n\r\n\r\n//申请买马\r\nexport class Msg_CS_ReqBuyHorse extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_ReqBuyHorse ); }\r\n\tpublic      majNum: number;         // 买入马牌序号(0-107)\r\n}\r\n\r\n//取消买马\r\nexport class Msg_CS_CancelBuyHorse extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_CancelBuyHorse ); }\r\n\tpublic      horseSit: number;       // 马位0-1\r\n}\r\n\r\n//刷新买马者信息（通用，只要改变都刷新，包括庄家买马）\r\nexport class Msg_SC_UpdateHorser extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_UpdateHorser ); }\r\n\tpublic horsers: HorserInfo[];    // 买马者列表\r\n}\r\n\r\n//通知开始选马牌\r\nexport class Msg_SC_StartSelHorse extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_StartSelHorse ); }\r\n}\r\n\r\n//玩家选马牌\r\nexport class Msg_CS_SelHorse extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_SelHorse ); }\r\n\tpublic      majNum: number;         // 买入马牌序号(0-107)\r\n}\r\n\r\n//广播选马牌结果（所有人选完以后统一广播）\r\nexport class Msg_SC_SelHorseRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_SelHorseRslt ); }\r\n\tpublic selHorseRslt: HorseSelInfo[];    // 选择结果\r\n}\r\n\r\n//买马战绩，一手结束后给买马者单独推送的信息\r\nexport class Msg_SC_NewHorseScoreRslt extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_NewHorseScoreRslt ); }\r\n\tpublic   tid: string;                // 牌桌号\r\n\tpublic      handNum: number;            // 结束的是第几手，从0开始\r\n\tpublic      majID: number;              // 买中牌面\r\n\tpublic tar: PlayerInfo;  // 买中玩家信息\r\n\tpublic      win: number;                // 战绩\r\n}\r\n\r\n//买马后的给买马者单独推送的房间信息\r\nexport class Msg_SC_HorseRoomInfo extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_HorseRoomInfo ); }\r\n\tpublic  info: HorserTableInfo;\r\n\tpublic                          isStart: number;    // 是否已经开局 1=开始\r\n\tpublic                          majNum: number;     // 买入马牌序号(0-107)\r\n\tpublic                          handNum: number;    // 当前进展到第几手，从0开始,-1=未开始\r\n}\r\n\r\n//给买马者单独推送的房间状态和结算信息（包括开局、关闭结算）\r\nexport class Msg_SC_HorseRoomState extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_HorseRoomState ); }\r\n\tpublic   tid: string;                // 牌桌号\r\n\tpublic      state: number;              // 0=未开始，1=开始，2=结束\r\n\tpublic      win: number;                // 本局总战绩\r\n}\r\n\r\n//给买马者单独推送的取消买马信息\r\nexport class Msg_SC_CancelBuyHorse extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_CancelBuyHorse ); }\r\n\tpublic   tid: string;                // 牌桌号\r\n}\r\n\r\n// 出现3番下叫，每手牌出现发送一次（只有3番时才发送，用于统计）\r\nexport class Msg_CS_Fan3Tin extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.CS_Fan3Tin ); }\r\n\tpublic      tinDob: number;             // 番倍数\r\n}\r\n\r\n// 77出现受限制的胡碰消息（因过手胡过手碰和2分起胡限制的胡碰消息）\r\nexport class Msg_SC_LimitHuPeng extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_LimitHuPeng ); }\r\n\tpublic      reason: number;             // 0=过手胡，1=过手碰，2=2分起胡\r\n}\r\n\r\n//78广播谁点了下一手\r\nexport class Msg_SC_NextTrunOK extends BaseIDMsg {\r\n\tpublic constructor() { super( MSG_MID.MID_TableMsg,  TabMSG_SID.SC_NextTrunOK ); }\r\n\tpublic      sit: number;                // 点了下一手的位置\r\n}\r\n\r\n\r\n"]}