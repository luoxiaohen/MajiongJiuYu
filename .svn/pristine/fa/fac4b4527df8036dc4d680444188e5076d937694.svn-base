"use strict";
cc._RF.push(module, 'e07980vuvFOwI8jrbaqyH0m', 'CreateRoomHelper');
// Script/UI/createRoom/CreateRoomHelper.ts

"use strict";
// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameOenRoomUseEnum = exports.OpenRoomGoldUseItem = void 0;
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var CreateRoomHelper = /** @class */ (function () {
    function CreateRoomHelper() {
        /**投注初始倍数*/
        this.initialMultiple = 200;
        /**开启买马增加倍数*/
        this.openBuyHorseMultiple = 100;
        /**开启飘增加倍数*/
        this.openDoubleMultiple = 100;
        /**16手增加倍数*/
        this.moreHandMultiple = 100;
        /**开启换三张增加倍数*/
        this.changeThreeMultiple = 100;
        /**开启庄家必买马增加倍数*/
        this.openBookmakerMustBuyHorseMultiple = 2;
        /**创建房间底注*/
        this.antesArr = [1, 2, 3, 5, 10, 20, 30, 50, 100, 200, 300, 500, 1000];
        /**游戏手数选择*/
        this.allGameHnadsArr = [8, 16];
        /**游戏倍数选择选择*/
        this.allGameMultipleArr = [8, 16, 32];
        this.allGameMultipleStringArr = ["3番(8倍)", "4番(16倍)", "5番(32倍)"];
        /**游戏梯番选择 0表示未勾选*/
        this.allGameTiFanArr = [0, 2, 4, 8];
        /**牌桌模板上线*/
        this.gameMaxTemplateNum = 3;
        /***开房金币消耗*/
        this.openRoomUseGlod = [
            { moudleType: 1, createPlayerUse: 98, joinPlayerUse: 98, buyHorsePlayerUse: 98 },
            { moudleType: 2, createPlayerUse: 36, joinPlayerUse: 0, buyHorsePlayerUse: 0 },
            { moudleType: 3, createPlayerUse: 36, joinPlayerUse: 0, buyHorsePlayerUse: 0 },
            { moudleType: 4, createPlayerUse: 0, joinPlayerUse: 24, buyHorsePlayerUse: 24 },
        ];
        /**游戏规则界面移动状态*/
        this.gameRuleItemIsMove = false;
        /**创建房间的模板*/
        this.createRoomRuleArr = [];
        this.colorData = {
            1: new cc.Color(172, 182, 187),
            2: new cc.Color(255, 255, 255),
            3: new cc.Color(68, 77, 84),
            4: new cc.Color(255, 0, 0),
        };
        this.createRoomCkeckName = {
            1: "梯番",
            2: "2倍",
            3: "4倍",
            4: "8倍",
            5: "庄家必飘",
            6: "甩飘",
            7: "豹子",
            8: "双豹",
            9: "买1马",
            10: "买2马",
            11: "活马",
            12: "死马",
            13: "庄家买马",
            14: "马不吃马",
            15: "自摸加分",
            16: "门清",
            17: "中张",
            18: "幺九",
            19: "将对",
            20: "夹心5",
            21: "天地胡",
            22: "无叫查大",
            23: "暴雨擦挂",
            24: "及时雨",
            25: "晒太阳",
            26: "连杠通转雨",
            27: "晒太阳",
            28: "晒太阳 - 反雨",
            29: "过庄过胡",
            30: "过庄过碰",
            31: "两分起胡",
            32: "最后四张必胡",
            33: "自摸亮牌",
            34: "实时流水",
            35: "轮庄",
            36: "IP限制",
            37: "GPS限制",
        };
    }
    CreateRoomHelper_1 = CreateRoomHelper;
    Object.defineProperty(CreateRoomHelper, "ins", {
        get: function () {
            return this._ins || (this._ins = new CreateRoomHelper_1());
        },
        enumerable: false,
        configurable: true
    });
    CreateRoomHelper.prototype.setCreateRoomRuleArr = function (arr) {
        this.createRoomRuleArr = arr;
    };
    CreateRoomHelper.prototype.getCreateRoomRuleArr = function () {
        return this.createRoomRuleArr;
    };
    CreateRoomHelper.prototype.removeTempByRuleArr = function (tempId) {
        var haveNum = 0;
        for (var i = 0; i < this.createRoomRuleArr.length; i++) {
            if (this.createRoomRuleArr[i].templId == tempId) {
                this.createRoomRuleArr[i] = null;
                haveNum = i;
            }
        }
        this.createRoomRuleArr.splice(haveNum, 1);
    };
    CreateRoomHelper.prototype.addTemplToRuleArr = function (temp) {
        var isHave = false;
        for (var i = 0; i < this.createRoomRuleArr.length; i++) {
            if (this.createRoomRuleArr[i].templId == temp.templId) {
                this.createRoomRuleArr[i] = temp;
                isHave = true;
            }
        }
        if (!isHave) {
            this.createRoomRuleArr.push(temp);
        }
    };
    var CreateRoomHelper_1;
    CreateRoomHelper = CreateRoomHelper_1 = __decorate([
        ccclass
    ], CreateRoomHelper);
    return CreateRoomHelper;
}());
exports.default = CreateRoomHelper;
/**开房金币支出*/
var OpenRoomGoldUseItem = /** @class */ (function () {
    function OpenRoomGoldUseItem() {
    }
    return OpenRoomGoldUseItem;
}());
exports.OpenRoomGoldUseItem = OpenRoomGoldUseItem;
/**开房金币支出枚举*/
var GameOenRoomUseEnum;
(function (GameOenRoomUseEnum) {
    GameOenRoomUseEnum[GameOenRoomUseEnum["None"] = 0] = "None";
    GameOenRoomUseEnum[GameOenRoomUseEnum["Base"] = 1] = "Base";
    GameOenRoomUseEnum[GameOenRoomUseEnum["BuyHorse"] = 2] = "BuyHorse";
    GameOenRoomUseEnum[GameOenRoomUseEnum["Piao"] = 3] = "Piao";
    GameOenRoomUseEnum[GameOenRoomUseEnum["BankerBuyHorse"] = 4] = "BankerBuyHorse";
})(GameOenRoomUseEnum = exports.GameOenRoomUseEnum || (exports.GameOenRoomUseEnum = {}));

cc._RF.pop();