{"version":3,"sources":["assets\\Script\\Shared\\DialogManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Global } from \"./GloBal\";\r\nimport MessageCallback from \"./MessageCallback\";\r\nimport Utils from \"./Utils\";\r\n\r\n\r\nexport default class DialogManager {\r\n    private static _ins: DialogManager;\r\n    public static get ins() {\r\n        return this._ins || (this._ins = new DialogManager());\r\n    }\r\n    public rootNode: cc.Node;\r\n    public dialogNode: cc.Node;\r\n    public frontNode: cc.Node;\r\n    public loadedDialogPrefabs: any;\r\n    public createdDialogs: any;\r\n    init(rootNode) {\r\n        this.rootNode = rootNode;\r\n        // 创建dialog node\r\n        this.dialogNode = this.rootNode.getChildByName(\"tipsLayar\");\r\n        this.dialogNode.width = rootNode.width;\r\n        this.dialogNode.height = rootNode.height;\r\n        this.frontNode = this.rootNode.getChildByName(\"frontNode\");\r\n        this.frontNode.width = rootNode.width;\r\n        this.frontNode.height = rootNode.height;\r\n        this.loadedDialogPrefabs = {};\r\n        this.createdDialogs = {};\r\n        MessageCallback.ins.addListener(\"DesignResolutionChanged\", this);\r\n    };\r\n\r\n    messageCallbackHandler(route, msg) {\r\n        if (route === \"DesignResolutionChanged\") {\r\n            this.updateDialogNodeSize(msg);\r\n        }\r\n    };\r\n\r\n    updateDialogNodeSize(size) {\r\n        this.dialogNode.width = size.width;\r\n        this.dialogNode.height = size.height;\r\n\r\n        this.frontNode.width = size.width;\r\n        this.frontNode.height = size.height;\r\n    };\r\n\r\n    /**\r\n     * 创建dialog\r\n     * @param dialogRes dialog种类，必须与prefab和dialog对应的管理js脚本名字相同\r\n     * @param params 创建dialog需要传入的参数\r\n     * @param cb 创建完成的会调\r\n     */\r\n    createDialog(dialogRes, params = {},cb = null,parent=null) {\r\n        cc.log(\"create dialog:\" + dialogRes)\r\n        // console.log(\"create dialog:\" + dialogRes);\r\n        let fileName = dialogRes;\r\n        let arr = dialogRes.split('/');\r\n        let dialogType = arr[arr.length - 1];\r\n        // 验证数据\r\n        if (!dialogRes) {\r\n            cc.error('Create Dialog failed: dialog type is null');\r\n            console.log(\"DialogManager ===> 数据验证错误\");\r\n            return;\r\n        }\r\n        let createdDialogs = this.createdDialogs;\r\n        let createDialog =  null;\r\n        let loadedDialogPrefabs = this.loadedDialogPrefabs;\r\n        if (!!loadedDialogPrefabs[dialogRes]) {\r\n            console.log(\"DialogManager ==> not loadedDialogPrefabs\")\r\n            createDialog = cc.instantiate(loadedDialogPrefabs[dialogRes]);\r\n            createdDialogs[dialogRes] = createDialog;\r\n            createDialog.getComponent(dialogType).dialogParameters = params || {};\r\n            createDialog.getComponent(dialogType).isDestroy = false;\r\n            createDialog.parent = parent ? parent :  this.dialogNode;\r\n            createDialog.y = -1920;\r\n            Global.Utils.invokeCallback(cb, null, createDialog);\r\n        } else {\r\n            console.log(\"DialogManager ==> to load a new prefab\")\r\n            cc.loader.loadRes(fileName, function (err, data) {\r\n                if (!!err) {\r\n                    cc.error(err);\r\n                    Global.Utils.invokeCallback(cb, err);\r\n                }\r\n                else {\r\n                    console.log(\"DialogManager ==> load handler\")\r\n                    loadedDialogPrefabs[dialogRes] = data;\r\n                    createDialog = cc.instantiate(data);\r\n                    console.log(\"DialogManager ==> load handler\"+createDialog.getComponent(dialogType))\r\n                    createdDialogs[dialogRes] = createDialog;\r\n                    createDialog.getComponent(dialogType).dialogParameters = params || {};\r\n                    createDialog.getComponent(dialogType).isDestroy = false;\r\n                    createDialog.parent = parent ? parent :  this.dialogNode;\r\n                    createDialog.y = 0;\r\n                    Global.Utils.invokeCallback(cb, null, createDialog);\r\n                }\r\n            }.bind(this));\r\n        }\r\n    };\r\n\r\n    isDialogExit(dialogRes) {\r\n        return !!this.createdDialogs[dialogRes];\r\n    };\r\n\r\n    /**\r\n     * 将dialog添加进dialogManager\r\n     * @param dialogType dialog类型\r\n     * @param dialog dialog节点\r\n     */\r\n    addDialogToManager(dialogType, dialog) {\r\n        this.createdDialogs[dialogType] = this.createdDialogs[dialogType] || dialog;\r\n    };\r\n\r\n    /**\r\n     * 删除dialog\r\n     * @param dialogRes 删除的dialog类型\r\n     * @param isClearPrefabs 是否清除dialog对应的prefab\r\n     */\r\n    destroyDialog(dialogRes, isClearPrefabs = false) {\r\n        isClearPrefabs = isClearPrefabs || false;\r\n        let createdDialogs = this.createdDialogs;\r\n        let dialog = null;\r\n        let dialogController = null;\r\n        if (typeof (dialogRes) === 'object') {\r\n            dialog = dialogRes.node;\r\n            dialogController = dialogRes;\r\n\r\n            for (let key in createdDialogs) {\r\n                if (createdDialogs.hasOwnProperty(key)) {\r\n                    if (createdDialogs[key] === dialog) {\r\n                        dialogRes = key;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            dialog = createdDialogs[dialogRes] || null;\r\n\r\n            let arr = dialogRes.split('/');\r\n            let dialogType = arr[arr.length - 1];\r\n\r\n            if (dialog) {\r\n                dialogController = dialog.getComponent(dialogType);\r\n            }\r\n        }\r\n        if (!dialog) {\r\n            cc.warn('destroy dialog not exist:' + dialogRes);\r\n        }\r\n        else {\r\n            let dialogActionWidgetCtrl = dialog.getComponent(\"DialogActionWidgetCtrl\");\r\n            if (!!dialogActionWidgetCtrl) {\r\n                dialogActionWidgetCtrl.dialogOut(function () {\r\n                    // 删除界面\r\n                    dialog.destroy();\r\n                    dialogController.isDestroy = true;\r\n                    // 移除属性\r\n                    delete createdDialogs[dialogRes];\r\n                    if (isClearPrefabs) {\r\n                        cc.loader.releaseRes(dialogRes);\r\n                        delete this.loadedDialogPrefabs[dialogRes];\r\n                    }\r\n                    cc.log('destroy dialog succeed:' + dialogRes);\r\n                }.bind(this))\r\n            } else {\r\n                // 删除界面\r\n                dialog.destroy();\r\n                dialogController.isDestroy = true;\r\n                // 移除属性\r\n                delete createdDialogs[dialogRes];\r\n                if (isClearPrefabs) {\r\n                    cc.loader.releaseRes(dialogRes);\r\n                    delete this.loadedDialogPrefabs[dialogRes];\r\n                }\r\n                cc.log('destroy dialog succeed:' + dialogRes);\r\n            }\r\n        }\r\n    };\r\n\r\n    destroyAllDialog(exceptArr = null) {\r\n        cc.log('destroyAllDialog');\r\n        for (let key in this.createdDialogs) {\r\n            if (this.createdDialogs.hasOwnProperty(key)) {\r\n                if (!!exceptArr && exceptArr.indexOf(key) >= 0) continue;\r\n                let dialog = this.createdDialogs[key];\r\n                // 删除界面\r\n                dialog.destroy();\r\n                let arr = key.split('/');\r\n                let dialogType = arr[arr.length - 1];\r\n                dialog.getComponent(dialogType).isDestroy = true;\r\n                // 移除属性\r\n                delete this.createdDialogs[key];\r\n            }\r\n        }\r\n    };\r\n\r\n}"]}