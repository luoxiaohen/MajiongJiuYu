{"version":3,"sources":["assets\\Script\\Shared\\NetworkManager.ts"],"names":[],"mappings":";;;;;AAAA,oCAAoC;;AAGpC,mCAAkC;AAClC,qDAAgD;AAEhD;IAMI;QACI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAND,sBAAkB,qBAAG;aAArB;YACI,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC,CAAC;QAC3D,CAAC;;;OAAA;IAKD,6BAAI,GAAJ,UAAK,MAAM,EAAE,EAAE;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACb,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,GAAG,EAAE,IAAI;SACZ,EAAE,EAAE,CAAC,CAAC;IACX,CAAC;IAAA,CAAC;IAEF,mCAAU,GAAV;QACI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IAAA,CAAC;IAEF,6BAAI,GAAJ,UAAK,KAAK,EAAE,GAAG,EAAE,OAAc,EAAE,MAAa;QAA7B,wBAAA,EAAA,cAAc;QAAE,uBAAA,EAAA,aAAa;IAE9C,CAAC;IAAA,CAAC;IAEF,+BAAM,GAAN,UAAO,KAAK,EAAE,GAAG;QACb,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACnC,CAAC;IAAA,CAAC;IAEF,yCAAgB,GAAhB,UAAiB,KAAK,EAAE,OAAO;QAC3B,OAAO,GAAG,OAAO,IAAI,KAAK,CAAC;QAC3B,IAAI,YAAY,GAAG,UAAC,GAAG;YACnB,IAAI,CAAC,CAAC,OAAO,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,yBAAe,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;aACjD;QACL,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QACpC,OAAO,YAAY,CAAC;IACxB,CAAC;IAAA,CAAC;IAEF,uCAAc,GAAd,UAAe,KAAK,EAAE,QAAQ;QAC1B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAChD,CAAC;IAAA,CAAC;IAEF,2CAAkB,GAAlB;QAEI,eAAM,CAAC,KAAK,CAAC,WAAW,CAAC,gDAAgD,GAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACtF,IAAG,IAAI,CAAC,MAAM,EAAC;YACX,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;SACpC;IACL,CAAC;IAAA,CAAC;IACN,qBAAC;AAAD,CAvDA,AAuDC,IAAA","file":"","sourceRoot":"/","sourcesContent":["//import { Global } from \"./Global\";\r\n\r\n\r\nimport { Global } from \"./GloBal\";\r\nimport MessageCallback from \"./MessageCallback\";\r\n\r\nexport default class NetworkManager {\r\n    private static _ins: NetworkManager;\r\n    public static get ins() {\r\n        return this._ins || (this._ins = new NetworkManager());\r\n    }\r\n    public pomelo;\r\n    constructor() {\r\n        this.pomelo = window[\"pomelo\"];\r\n    }\r\n    init(params, cb) {\r\n        this.pomelo.init({\r\n            host: params.host,\r\n            port: params.port,\r\n            log: true\r\n        }, cb);\r\n    };\r\n\r\n    disconnect() {\r\n        this.pomelo.disconnect();\r\n    };\r\n\r\n    send(route, msg, cbRoute = null, cbFail = null) {\r\n        \r\n    };\r\n\r\n    notify(route, msg) {\r\n        console.log('Notify:' + route);\r\n        console.log(msg);\r\n        this.pomelo.notify(route, msg);\r\n    };\r\n\r\n    addReceiveListen(route, cbRoute) {\r\n        cbRoute = cbRoute || route;\r\n        let pushCallback = (msg) => {\r\n            if (!!cbRoute) {\r\n                console.log('push:' + cbRoute);\r\n                console.log(msg);\r\n                MessageCallback.ins.emitMessage(cbRoute, msg);\r\n            }\r\n        };\r\n        this.pomelo.on(route, pushCallback);\r\n        return pushCallback;\r\n    };\r\n\r\n    removeListener(route, callback) {\r\n        this.pomelo.removeListener(route, callback);\r\n    };\r\n\r\n    removeAllListeners() {\r\n        \r\n        Global.Utils.debugOutput(\"NetworkLogic ==> removeAllListeners ==> 移除事件监听\"+this.pomelo)\r\n        if(this.pomelo){\r\n            this.pomelo.removeAllListeners();\r\n        }\r\n    };\r\n}"]}