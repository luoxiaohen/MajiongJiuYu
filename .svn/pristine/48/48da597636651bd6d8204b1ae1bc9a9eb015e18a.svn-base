{"version":3,"sources":["assets\\Script\\com\\socket\\SocketManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Global } from \"../../Shared/GloBal\";\r\nimport { SocketAdapter } from \"../SocketAdapter\";\r\nimport { ISocketAgent } from \"./ISocketAgent\";\r\nimport { Socket } from \"./Socket\";\r\n\r\nexport enum SocketType {\r\n\tDefault\r\n}\r\n\r\nexport class SocketManager {\r\n\tprivate mSocketLib: Object = {};\r\n\tprivate mAgenClass: any = null;\r\n\tprivate mUrlSep: string = \":\";\r\n\tprivate mTmpHandlerLib: Object = {};\r\n\t//ssl证书地址，目前发现如果socket服务器采用亚马逊颁发的证书的话 安卓端会出现连接不上的问题\r\n\t//故而 需要在客户端的socket连接处加上证书（https://curl.se/docs/caextract.html 下载相应证书）\r\n\t//let _pemUrl =cc.url.raw(\"resources/cacert.pem\");\r\n\t//if( cc.loader.md5Pipe ){\r\n\t//\t_pemUrl = cc.loader.md5Pipe.transformURL(_pemUrl);\r\n\t//}\r\n\tpublic wssCacertPath:string = null;\r\n\tpublic constructor() {\r\n\r\n\t}\r\n\t/**[public] \r\n\t * 配置基本信息\r\n\t * @param _agentClass socket代理类 \r\n\t * @param _urlSep url分隔符通常情况下是冒号\r\n\t */\r\n\tpublic config(_agentClass: any, _urlSep: string = \":\") {\r\n\t\tthis.mAgenClass = _agentClass;\r\n\t\tthis.mUrlSep = _urlSep;\r\n\t}\r\n\t/**[public] \r\n\t * 创建socket连接\r\n\t * @param _host \r\n\t * @param _port \r\n\t * @param _socketType \r\n\t */\r\n\tpublic createSocket(_host: string, _port: number, _socketType: number = -1) {\r\n\t\tlet _url: string = this.mergeUrl(_host, _port);\r\n\t\tthis.createSocketByUrl(_url);\r\n\t}\r\n\tpublic createSocketByUrl(_url: string, _socketType: number = -1) {\r\n\t\t_socketType = this.getSocketType(_socketType);\r\n\t\tlet _agent: ISocketAgent = new this.mAgenClass();\r\n\t\tthis.destorySocket(_socketType);\r\n\t\tlet _socket: Socket = new Socket(_socketType, _agent);\r\n\t\tthis.addHandlers(_socket);\r\n\t\t_socket.startConnect(_url,this.wssCacertPath);\r\n\t\tthis.mSocketLib[_socketType] = _socket;\r\n\t}\r\n\tprivate addHandlers(_socket: Socket) {\r\n\t\tlet _handlerLib: Object = this.mTmpHandlerLib[_socket.socketType];\r\n\t\tif (_handlerLib) {\r\n\t\t\tfor (let _id in _handlerLib) {\r\n\t\t\t\tlet _handlerList: any[] = _handlerLib[_id];\r\n\t\t\t\t_handlerList.forEach(_handler=>{\r\n\t\t\t\t\t_socket.addReceiveNotify(_handler[\"mid\"],_handler[\"sid\"], _handler[\"handler\"], _handler[\"target\"]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpublic mergeUrl(_host: string, _port: number): string {\r\n\t\treturn `${_host}${this.mUrlSep}${_port}`;\r\n\t}\r\n\t/**[public] \r\n\t * 获取socket\r\n\t * @param _socketType \r\n\t */\r\n\tpublic getSocket(_socketType: number = -1): Socket {\r\n\t\t_socketType = this.getSocketType(_socketType);\r\n\t\treturn this.mSocketLib[_socketType];\r\n\t}\r\n\t/**[public] \r\n\t * 销毁某个socket\r\n\t * @param _socketType \r\n\t */\r\n\tpublic destorySocket(_socketType: number = -1) {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\tif (_socket) {\r\n\t\t\t_socket.destory();\r\n\t\t\tdelete this.mSocketLib[_socket.socketType];\r\n\t\t}\r\n\t}\r\n\t/**[public] \r\n\t * 关闭连接\r\n\t * @param _socketType \r\n\t */\r\n\tpublic closeSocket(_socketType: number = -1) {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\tif (_socket) {\r\n\t\t\t_socket.close();\r\n\t\t\tthis.destorySocket(_socketType);\r\n\t\t}\r\n\t}\r\n\t/**[public] \r\n\t * 重连\r\n\t * @param _socketType \r\n\t */\r\n\tpublic reconnect(_socketType: number = -1) {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\tif (_socket) {\r\n\t\t\t_socket.reconnect();\r\n\t\t}\r\n\t}\r\n\t/**[public] \r\n\t * 是否连接\r\n\t * @param _socketType \r\n\t */\r\n\tpublic isConnected(_socketType: number = -1): boolean {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\treturn _socket ? _socket.connected : false;\r\n\t}\r\n\t/**[public] \r\n\t * 发送\r\n\t * @param _socketType \r\n\t * * ..._datas \r\n\t */\r\n\tpublic send(_socketType: number = -1, ..._datas) {\r\n\t\tGlobal.Utils.debugOutput(\"SocketManager ==> send msg : \");\r\n\t\tGlobal.Utils.debugOutput(_datas);\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\tif (_socket) {\r\n\t\t\t_socket.send.apply(_socket, _datas);\r\n\t\t}\r\n\t}\r\n\t/**[public] \r\n\t * 添加通知回调\r\n\t * @param _id \r\n\t * @param _handler \r\n\t * @param _target \r\n\t * @param _socketType \r\n\t */\r\n\tpublic addReceiveNotify(_mid: number,_sid:number ,_handler: Function, _target: any, _socketType: number = -1) {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\tif (_socket) {\r\n\t\t\t_socket.addReceiveNotify(_mid , _sid, _handler, _target);\r\n\t\t}\r\n\t\t_socketType = this.getSocketType(_socketType);\r\n\t\tlet _lib: Object = this.mTmpHandlerLib[_socketType] || {};\r\n\t\tthis.mTmpHandlerLib[_socketType] = _lib;\r\n\t\tlet _id : number = (_mid<<16)+_sid;\r\n\t\tlet _list: any[] = _lib[_id] || [];\r\n\t\t_lib[_id] = _list;\r\n\t\t_list.push({ mid: _mid,sid : _sid, handler: _handler, target: _target });\r\n\t}\r\n\tpublic removeReceiveNotify(_target: any, _socketType: number = -1) {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\t_socket && _socket.removeReceiveNotify(_target);\r\n\t}\r\n\t/**[public] \r\n\t * 广播通知\r\n\t * @param _id \r\n\t * @param _data \r\n\t * @param _socketType \r\n\t */\r\n\tpublic notifyReceive(_id: any, _data: any, _socketType: number = -1) {\r\n\t\tlet _socket: Socket = this.getSocket(_socketType);\r\n\t\tif (_socket) {\r\n\t\t\t_socket.notifyReceive(_id, _data);\r\n\t\t}\r\n\t}\r\n\tprivate getSocketType(_socketType: number): number {\r\n\t\treturn _socketType == -1 ? SocketType.Default : _socketType;\r\n\t}\r\n}"]}