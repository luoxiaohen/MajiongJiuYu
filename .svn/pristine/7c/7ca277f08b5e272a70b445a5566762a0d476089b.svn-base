
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UI/card/DownHandCardPanel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b8540NbHUtBY4IvKhwnMxsj', 'DownHandCardPanel');
// Script/UI/card/DownHandCardPanel.ts

"use strict";
// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var EnumManager_1 = require("../../enum/EnumManager");
var CardHelpManager_1 = require("./CardHelpManager");
var HandCardPanel_1 = require("./HandCardPanel");
var MajiongHandCard_1 = require("./MajiongHandCard");
var MajiongOutCard_1 = require("./MajiongOutCard");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var DownHandCardPanel = /** @class */ (function (_super) {
    __extends(DownHandCardPanel, _super);
    function DownHandCardPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DownHandCardPanel.prototype.onLoad = function () {
        _super.prototype.onLoad.call(this);
    };
    DownHandCardPanel.prototype.start = function () {
        this.initHandData();
    };
    DownHandCardPanel.prototype.initHandData = function () {
        _super.prototype.initHandData.call(this);
        this.bySelfPoint = EnumManager_1.CardGroupPointBySelfEnum.Down;
        var item;
        item = cc.instantiate(this.dialogParameters[0]).getComponent(MajiongHandCard_1.default);
        item.bySelfPoint = this.bySelfPoint;
        item.node.x = 0;
        item.node.y = 532;
        item.isFeel = true;
        this.handItemArr[13] = item;
        this.node.addChild(item.node);
        var index = 1;
        for (var i = 12; i >= 0; i--) {
            item = cc.instantiate(this.dialogParameters[0]).getComponent(MajiongHandCard_1.default);
            item.bySelfPoint = this.bySelfPoint;
            item.node.x = index * 2;
            item.node.y = i * 38 + this.feelCardChange[this.bySelfPoint];
            this.handItemArr[i] = item;
            this.node.addChild(item.node);
            index++;
        }
    };
    /**展示胡牌*/
    DownHandCardPanel.prototype.showHupai = function (msg) {
        _super.prototype.showHupai.call(this, msg);
    };
    DownHandCardPanel.prototype.showGetHnads = function (getNum) {
        _super.prototype.showGetHnads.call(this, getNum);
        var item;
        var showIndex = 0;
        for (var i = 0; i < this.handItemArr.length; i++) {
            item = this.handItemArr[i];
            if (!item.isShow && showIndex < getNum) {
                showIndex++;
                item.node.x += 15;
                item.isShow = true;
                item.showGetAction(i + showIndex);
            }
        }
    };
    DownHandCardPanel.prototype.createOutCard = function (value) {
        if (value === void 0) { value = 1; }
        _super.prototype.createOutCard.call(this, value);
        var item = cc.instantiate(this.dialogParameters[1]).getComponent(MajiongOutCard_1.default);
        item.bySelfPoint = this.bySelfPoint;
        item.cardValue = value;
        var row = this.getOutRow();
        var baseNum = 0;
        if (row > 0) {
            baseNum = this.myOutArray.length - this.getBaseNum();
        }
        else {
            baseNum = this.myOutArray.length;
        }
        var changeX = baseNum * 1 - row * 80;
        var changeY = baseNum * -46 + row * 46;
        var initX = CardHelpManager_1.default.ins.downOutCardInitPoint.x - CardHelpManager_1.default.ins.downHandCardInitPoint.x;
        var initY = CardHelpManager_1.default.ins.downOutCardInitPoint.y - CardHelpManager_1.default.ins.downHandCardInitPoint.y;
        item.node.x = initX - changeX;
        item.node.y = initY - changeY;
        item.node.zIndex = 40 - this.myOutArray.length;
        this.onMyOutChangeData(item);
        this.node.addChild(item.node);
        this.lastOutCard = item;
    };
    DownHandCardPanel.prototype.showOutCard = function (value) {
        _super.prototype.showOutCard.call(this, value);
    };
    DownHandCardPanel.prototype.showFeelWall = function (cardValue) {
        _super.prototype.showFeelWall.call(this, cardValue);
    };
    DownHandCardPanel.prototype.clearLastPlay = function () {
        _super.prototype.clearLastPlay.call(this);
    };
    DownHandCardPanel.prototype.showPengGang = function (msg) {
        _super.prototype.showPengGang.call(this, msg);
    };
    DownHandCardPanel.prototype.showSelfGang = function (msg) {
        _super.prototype.showSelfGang.call(this, msg);
    };
    DownHandCardPanel.prototype.disTory = function () {
        _super.prototype.disTory.call(this);
    };
    DownHandCardPanel = __decorate([
        ccclass
    ], DownHandCardPanel);
    return DownHandCardPanel;
}(HandCardPanel_1.default));
exports.default = DownHandCardPanel;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,