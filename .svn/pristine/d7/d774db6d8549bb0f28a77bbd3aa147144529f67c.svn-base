{"version":3,"sources":["assets\\Script\\UI\\GameTurntablePanel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { DirectionEnum, TurnTableItemStateEnum, } from \"../enum/EnumManager\";\r\nimport GameInfo from \"../Game/info/GameInfo\";\r\nimport { Global } from \"../Shared/GloBal\";\r\nimport Utils from \"../Shared/Utils\";\r\nimport UIBase from \"../UIBase\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nclass SeabedItem {\r\n    public dir: DirectionEnum;\r\n    public spiteNode: cc.Node;\r\n    public labelNode: cc.Node;\r\n    public sprite: cc.Sprite;\r\n    private label: cc.Label;\r\n    private spriteAnim:cc.Animation;\r\n    private labelAnim:cc.Animation;\r\n    constructor(_dir, _spriteNode,labelNode, _sprite, _label) {\r\n        this.dir = _dir;\r\n        this.spiteNode = _spriteNode;\r\n        this.labelNode = labelNode;\r\n\r\n        this.sprite = _sprite;\r\n        this.label = _label;\r\n        this.spriteAnim=this.spiteNode.getComponent(cc.Animation);\r\n        this.labelAnim=this.labelNode.getComponent(cc.Animation);\r\n    }\r\n    public set labelShow(_value:string){\r\n        if(_value!=\"out\"){\r\n            this.label.string=_value;\r\n        }\r\n    }\r\n    public playAnim():void{\r\n        this.spriteAnim.play();\r\n        this.labelAnim.play();\r\n    }\r\n    public stopAnim():void{\r\n        this.spriteAnim.stop();\r\n        this.labelAnim.stop();\r\n        this.spiteNode.opacity=255;\r\n        this.labelNode.opacity=255;\r\n    }\r\n    public reset():void{\r\n       this.stopAnim();\r\n    }\r\n}\r\n\r\nclass PlayerDirecItem {\r\n    public dir: DirectionEnum;\r\n    public lightNode: cc.Node;\r\n    public darkNode: cc.Node;\r\n    public lightSprite: cc.Sprite;\r\n    public darkSprite: cc.Sprite;\r\n    public seabedItem: SeabedItem;\r\n    private playerState: TurnTableItemStateEnum;\r\n    private lightAnim:cc.Animation;\r\n    constructor(_dir, _lightNode:cc.Node, _darkNode, _lightSprite, _darkSprite) {\r\n        this.dir = _dir;\r\n        this.lightNode = _lightNode;\r\n        this.darkNode = _darkNode;\r\n        this.lightSprite = _lightSprite;\r\n        this.darkSprite = _darkSprite;\r\n        this.playerState = TurnTableItemStateEnum.None;\r\n        this.lightAnim=_lightNode.getComponent(cc.Animation);\r\n    }\r\n    public get PlayerState():number{\r\n        return this.playerState;\r\n    }\r\n    public setSeabedItem(_seabedItem): void {\r\n        this.seabedItem = _seabedItem;\r\n        this.seabedItem.labelShow=\"\";\r\n    }\r\n    public get isSeabedSate():boolean{\r\n        return this.playerState==TurnTableItemStateEnum.CurRoundInSeabed||this.playerState==TurnTableItemStateEnum.NotCurRoundInSeabed;\r\n    }\r\n    public get isFinisheState():boolean{\r\n        return this.playerState==TurnTableItemStateEnum.Finish;\r\n    }\r\n    public setPlayerDirState(_state: TurnTableItemStateEnum,_parm:any=null): void {\r\n        this.stopPlayerAnim();\r\n        this.playerState=_state;\r\n        this.lightNode.active = _state == TurnTableItemStateEnum.CurrentRound|| _state == TurnTableItemStateEnum.NotInRound;\r\n        this.darkNode.active =  _state == TurnTableItemStateEnum.NotInRound||_state==TurnTableItemStateEnum.Finish;\r\n        this.seabedItem.spiteNode.active=this.isSeabedSate;\r\n        switch (_state) {\r\n            case TurnTableItemStateEnum.CurrentRound:\r\n                this.playPlayerAnim();\r\n                break;\r\n            case TurnTableItemStateEnum.NotInRound:\r\n                break;\r\n            case TurnTableItemStateEnum.CurRoundInSeabed:\r\n                this.playPlayerAnim();\r\n                this.seabedItem.labelShow=_parm.value;\r\n                break;\r\n            case TurnTableItemStateEnum.NotCurRoundInSeabed:\r\n                this.seabedItem.labelShow=_parm.value;\r\n                break;\r\n            case TurnTableItemStateEnum.Finish:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private playPlayerAnim(): void {\r\n        if (this.isSeabedSate) {\r\n            this.seabedItem.playAnim();\r\n        } else {\r\n            this.lightAnim.play();\r\n        }\r\n    }\r\n\r\n    private stopPlayerAnim(): void {\r\n        this.lightAnim.stop();\r\n        this.lightNode.opacity=255;\r\n        this.seabedItem.stopAnim();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.playerState = TurnTableItemStateEnum.None;\r\n        this.lightNode.active = true;\r\n        this.stopPlayerAnim();\r\n        this.seabedItem=null;\r\n    }\r\n}\r\n@ccclass\r\nexport default class GameTurntablePanel extends UIBase {\r\n\r\n    @property(cc.Sprite)\r\n    table_bg: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    label_remain: cc.Label = null;\r\n\r\n    @property({ type: cc.Node })\r\n    darkDirectorNodeRoot: cc.Node = null;\r\n\r\n    @property({ type: cc.Node })\r\n    lightDirectorNodeRoot: cc.Node = null;\r\n\r\n    @property({ type: [cc.Node] })\r\n    darkDirectorNodeArr: cc.Node[] = [];\r\n    darkDirectorSpriteArr: cc.Sprite[] = [];\r\n\r\n    @property({ type: [cc.Node] })\r\n    lightDirectorNodeArr: cc.Node[] = [];\r\n    lightDirectorSpriteArr: cc.Sprite[] = [];\r\n\r\n    @property({ type: cc.Node })\r\n    seabedStateNodeRoot: cc.Node=null;\r\n\r\n    /*** 转盘图片路径*/\r\n    private resSpriteBasePath = \"turnTable/resource/\";\r\n    /*** 转盘底部图片命名前缀 */\r\n    private resSpriteBgPrefix = \"game_fangxiang_\";\r\n    /*** 转盘暗图片命名前缀*/\r\n    private resSpriteDarkPrefix = \"game_an_zi_\";\r\n    /*** 转盘亮图片命名前缀*/\r\n    private resSpriteLightPrefix = \"game_fangxiang_zi_\";\r\n    /**当前剩余牌数 */\r\n    private nowRemainCardNum: number = 0;\r\n\r\n    private nowTableDicType: DirectionEnum = DirectionEnum.Dong;\r\n\r\n    // private seabedItemMap:{[key:number]:SeabedItem};\r\n    private playerDirecItemMap: { [key: number]: PlayerDirecItem };\r\n    private nowTurnPlayerDirect: number = 1;\r\n    private sumCardNum = 108;\r\n    private triggerSeabedPlayer: number = -1;\r\n    private playerArr = [1, 2, 3];\r\n\r\n    onLoad(): void {\r\n        this.darkDirectorSpriteArr = [];\r\n        this.lightDirectorSpriteArr = [];\r\n        for (let item of this.darkDirectorNodeArr) {\r\n            let sprite = item.getComponent(cc.Sprite);\r\n            sprite && this.darkDirectorSpriteArr.push(sprite);\r\n        }\r\n        for (let item of this.lightDirectorNodeArr) {\r\n            let sprite = item.getComponent(cc.Sprite);\r\n            sprite && this.lightDirectorSpriteArr.push(sprite);\r\n        }\r\n        this.ResetTable();\r\n\r\n    }\r\n    protected start() {\r\n\r\n    }\r\n    /** 初始化桌面显示（游戏准备阶段） */\r\n    public ResetTable(): void {\r\n        this.playerArr = [0, 1, null, 3];\r\n        this.triggerSeabedPlayer=-1;\r\n        for(let key in this.playerDirecItemMap){\r\n            let item=this.playerDirecItemMap[key];\r\n            item.reset();\r\n        }\r\n        this.playerDirecItemMap={};\r\n        this.initPlayerNodeMap(0,true);\r\n        this.setRemainCardNum(108);\r\n    }\r\n\r\n    private ontestbtnclick(): void {\r\n        if (this.nowRemainCardNum <= 0) {\r\n            Global.Utils.debugOutput(\"当前剩余牌数为0！！！\");\r\n            return;\r\n        }\r\n        this.nowTurnPlayerDirect++;\r\n        this.nowTurnPlayerDirect = this.nowTurnPlayerDirect % 4;\r\n        while (!this.playerArr.includes(this.nowTurnPlayerDirect)) {\r\n            this.nowTurnPlayerDirect++;\r\n            this.nowTurnPlayerDirect = this.nowTurnPlayerDirect % 4;\r\n        }\r\n        this.setRemainCardNum(--this.nowRemainCardNum);\r\n\r\n        this.SetCurrentTurnState(this.nowRemainCardNum, this.nowTurnPlayerDirect, this.playerArr);\r\n    }\r\n    private onResetBtnClick(): void {\r\n        Global.Utils.debugOutput(\"重置转盘！！\");\r\n        this.ResetTable();\r\n        this.InitPlayerDicType(Global.Utils.getRandomNum(0, 3));\r\n        this.setRemainCardNum(11);\r\n        this.nowTurnPlayerDirect++;\r\n        this.nowTurnPlayerDirect = this.nowTurnPlayerDirect % 4;\r\n        while (!this.playerArr.includes(this.nowTurnPlayerDirect)) {\r\n            this.nowTurnPlayerDirect++;\r\n            this.nowTurnPlayerDirect = this.nowTurnPlayerDirect % 4;\r\n        }\r\n        this.SetCurrentTurnState(this.nowRemainCardNum, this.nowTurnPlayerDirect, this.playerArr);\r\n    }\r\n\r\n    /**\r\n     * 初始化设置用户玩家位置（游戏开始阶段）\r\n     * @param _direcType DirectionEnum\r\n     * @param _sumCardNum 总牌数\r\n     * @returns \r\n     */\r\n    public InitPlayerDicType(_direcType: DirectionEnum, _sumCardNum = 108): void {\r\n        this.ResetTable();\r\n        this.sumCardNum = _sumCardNum;\r\n        this.nowTableDicType = _direcType;\r\n        if (this.darkDirectorSpriteArr.length != this.lightDirectorSpriteArr.length) {\r\n            Global.Utils.debugOutput(\"GameTurntable:   预制体图片数量设置有误!\");\r\n            return;\r\n        }\r\n        this.setTableSprite(this.table_bg, this.resSpriteBasePath + this.resSpriteBgPrefix + _direcType);\r\n\r\n        this.initPlayerNodeMap(_direcType);\r\n        this.initSeabadMap(_direcType);\r\n\r\n    }\r\n    private initPlayerNodeMap(_direcType: DirectionEnum,_isReset:boolean=false): void {\r\n        this.playerDirecItemMap = {};\r\n        let darkSpriteUrl = this.resSpriteBasePath + this.resSpriteDarkPrefix + _direcType;\r\n        let lightSpriteUrl = this.resSpriteBasePath + this.resSpriteLightPrefix + _direcType;\r\n        for (let index = 0; index < 4; index++) {\r\n            let formatIndex = \"_\" + (index + _direcType) % 4;\r\n\r\n            let darkSprite = this.darkDirectorSpriteArr[index];\r\n            let lightSprite = this.lightDirectorSpriteArr[index];\r\n            let darkNode = this.darkDirectorNodeArr[index];\r\n            let lightNode = this.lightDirectorNodeArr[index];\r\n            let mapKey = (index + _direcType) % 4;\r\n            if(!_isReset){\r\n                let playerDirecItem = new PlayerDirecItem(mapKey, lightNode, darkNode, lightSprite, darkSprite);\r\n                this.playerDirecItemMap[mapKey] = playerDirecItem;\r\n            }\r\n\r\n            this.setTableSprite(darkSprite, darkSpriteUrl + formatIndex);\r\n            this.setTableSprite(lightSprite, lightSpriteUrl + formatIndex);\r\n        }\r\n    }\r\n    private initSeabadMap(_direcType: DirectionEnum): void {\r\n        let seabedSpiteUrl = this.resSpriteBasePath + this.resSpriteBgPrefix + _direcType + \"_\";\r\n        for (let index = 0; index < 4; index++) {\r\n            let mapKey = (index + _direcType) % 4;\r\n            let seabedItem = this.seabedStateNodeRoot;\r\n            if (seabedItem) {\r\n                let spriteNode = seabedItem.getChildByName(\"down_sprite_\"+index);\r\n                let numLabelNode = seabedItem.getChildByName(\"num_label_\"+index);\r\n                if (spriteNode && numLabelNode) {\r\n                    let sea_item = new SeabedItem(mapKey, spriteNode,numLabelNode, spriteNode.getComponent(cc.Sprite), numLabelNode.getComponent(cc.Label));\r\n                    this.setTableSprite(sea_item.sprite, seabedSpiteUrl + mapKey);\r\n                    let playerItem = this.playerDirecItemMap[mapKey];\r\n                    if (playerItem) {\r\n                        playerItem.setSeabedItem(sea_item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    private setTableSprite(_sprite: cc.Sprite, _url: string): void {\r\n        if (!_sprite || !_url) {\r\n            Global.Utils.debugOutput(\"GameTurntable:   图片设置出错!\");\r\n            return;\r\n        }\r\n        Global.Utils.setNewImageToSprite(_sprite, _url);\r\n    }\r\n    /**\r\n     * 设置当前回合数据（游戏中）\r\n     * @param _remainCardsNum  剩余牌数\r\n     * @param _curentTurnPlayer 当前回合玩家\r\n     * @param _playerArr 当前桌子剩余玩家\r\n     */\r\n    public SetCurrentTurnState(_remainCardsNum: number, _curentTurnPlayer: DirectionEnum, _playerArr: number[]): void {\r\n        this.playerArr = _playerArr;\r\n        for(let index=0;index<_playerArr.length;index++){\r\n            let playerItem = this.playerDirecItemMap[index];\r\n            if(_playerArr[index]==null){\r\n                playerItem.setPlayerDirState(TurnTableItemStateEnum.Finish);\r\n            }\r\n        }\r\n        this.setRemainCardNum(_remainCardsNum);\r\n        this.setTurningPlayer(_curentTurnPlayer);\r\n        this.setSeabedStateData(_playerArr);\r\n    }\r\n    /**\r\n     * 设置当前剩余牌数\r\n     * @param _num 数量\r\n     */\r\n    private setRemainCardNum(_num: number): void {\r\n        this.nowRemainCardNum = _num;\r\n        if (_num >= 0) {\r\n            this.label_remain.string = _num.toString();\r\n        } else {\r\n            this.label_remain.string = \"\";\r\n        }\r\n    }\r\n    /**\r\n     * @param _playerArr 当前桌上剩余玩家 ,为[]时表示全部\r\n     */\r\n    private setSeabedStateData(_playerArr: number[] = []): void {\r\n        if (this.nowRemainCardNum > 4) {\r\n            return;\r\n        }\r\n        let isTriggerTime=this.nowRemainCardNum == 4;\r\n        if (isTriggerTime) {\r\n            this.triggerSeabedPlayer = this.nowTurnPlayerDirect;\r\n        }\r\n        this.setSeabedStateLabelShow(_playerArr,isTriggerTime);\r\n    }\r\n   \r\n    private setSeabedStateLabelShow(_playerArr: number[],triggerTime:boolean=false): void {\r\n        let remainPlayerNum=0;\r\n        for(let item of _playerArr){\r\n            if(item!=null){\r\n                remainPlayerNum++;\r\n            }\r\n        }\r\n        for (let _player of _playerArr) {\r\n            if(_player==null){\r\n                continue;\r\n            }\r\n            let playerItem = this.playerDirecItemMap[_player];\r\n            let offsetDir = this.getOffsetNum(this.nowTurnPlayerDirect,_player,_playerArr);\r\n            let showNum=this.sumCardNum-this.nowRemainCardNum + offsetDir;\r\n            let showStr=showNum>108?\"out\":showNum==108?\"海底\":showNum+\"\";\r\n            let param={value:showStr};\r\n            if(!triggerTime){\r\n                if(this.nowTurnPlayerDirect==playerItem.dir){\r\n                    playerItem.setPlayerDirState(TurnTableItemStateEnum.CurRoundInSeabed,param);\r\n                }else{\r\n                    playerItem.setPlayerDirState(TurnTableItemStateEnum.NotCurRoundInSeabed,param);\r\n                }\r\n            }else{\r\n                if(this.nowTurnPlayerDirect==playerItem.dir){\r\n                    playerItem.setPlayerDirState(TurnTableItemStateEnum.CurrentRound);\r\n                }else{\r\n                    playerItem.setPlayerDirState(TurnTableItemStateEnum.NotCurRoundInSeabed,param);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 设置当前轮到的玩家\r\n    * @param _direcEnum DirectionEnum\r\n    */\r\n    private setTurningPlayer(_direcEnum: DirectionEnum): void {\r\n        this.nowTurnPlayerDirect = _direcEnum;\r\n        let turningPlayerItem = this.playerDirecItemMap[_direcEnum];\r\n        if (turningPlayerItem.isFinisheState) {\r\n            Global.Utils.debugOutput(\"当前轮到的玩家已经结束游戏！！！\");\r\n            return;\r\n        }\r\n        for (let key in this.playerDirecItemMap) {\r\n            let playerItem = this.playerDirecItemMap[key];\r\n            if(playerItem.isFinisheState){\r\n                continue;\r\n            }\r\n            let isTurningPlayer = Number(key) == _direcEnum;\r\n            if(!playerItem.isSeabedSate){\r\n                let state=this.getTurnItemState(isTurningPlayer,false);\r\n                playerItem.setPlayerDirState(state);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTurnItemState(_isTurn: boolean, _isSeabed: boolean): TurnTableItemStateEnum {\r\n        let state = TurnTableItemStateEnum.None;\r\n        if (_isTurn) {\r\n            if (_isSeabed) {\r\n                state = TurnTableItemStateEnum.CurRoundInSeabed;\r\n            } else {\r\n                state = TurnTableItemStateEnum.CurrentRound;\r\n            }\r\n        } else {\r\n            if (_isSeabed) {\r\n                state = TurnTableItemStateEnum.NotCurRoundInSeabed;\r\n            } else {\r\n                state = TurnTableItemStateEnum.NotInRound;\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n\r\n    private getOffsetNum(_startDir:number,_endDir:number,_playerArr:number[]):number{\r\n        if(this.isUndefiendOrNull(_playerArr[_startDir])||this.isUndefiendOrNull(_playerArr[_endDir])){\r\n            Global.Utils.debugOutput(\"无法到达位置！！\");\r\n            return 0;\r\n        }\r\n        let offset=0;\r\n        for(let index=_startDir;index<_startDir+4;index++){\r\n            if(_playerArr[index%Global.Utils.getMaxPlayerByGameType(GameInfo.ins.roomTableInfo.rule.roomType)]==null){\r\n                continue;\r\n            }\r\n            if(index%Global.Utils.getMaxPlayerByGameType(GameInfo.ins.roomTableInfo.rule.roomType)==_endDir){\r\n                break;\r\n            }\r\n            offset++;\r\n        }\r\n        return offset;\r\n    }\r\n    private isUndefiendOrNull(_value:any):boolean{\r\n        return _value==null||_value==undefined;\r\n    }\r\n\r\n    disTory(){\r\n        super.disTory();\r\n    }\r\n\r\n}\r\n"]}