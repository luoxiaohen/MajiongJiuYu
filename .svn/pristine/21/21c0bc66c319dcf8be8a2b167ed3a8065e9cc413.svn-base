{"version":3,"sources":["assets\\Script\\tips\\GetCardItem.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,2CAA0C;AAC1C,oCAA+B;AAEzB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAyC,+BAAM;IAA/C;QAAA,qEA0CC;QAxCG,oBAAc,GAAe,IAAI,CAAC;QAElC,kBAAY,GAAe,IAAI,CAAC;;IAsCpC,CAAC;IAhCa,4BAAM,GAAhB;IAEA,CAAC;IACD,6BAAO,GAAP,UAAQ,SAAkB,EAAG,IAAc,EAAG,QAAQ,EAAG,OAAO;QAAnC,qBAAA,EAAA,QAAa,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAG,IAAI,IAAI,CAAC,EAAC;YACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAC9C,IAAI,MAAM,GAAa,4CAA4C,GAAG,IAAI,CAAC;YAClE,eAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,EAAG,MAAM,CAAC,CAAC;SACtE;aAAI;YACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACtC;QACK,IAAI,UAAU,GAAY,uBAAuB,GAAG,eAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC9F,eAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAG,UAAU,CAAC,CAAC;IACvE,CAAC;IACD,iCAAW,GAAX;QAEI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IACD,6BAAO,GAAP;QACI,iBAAM,OAAO,WAAE,CAAC;IACpB,CAAC;IACD,gCAAU,GAAV;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,kCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAvCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;uDACc;IAElC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;qDACY;IAJf,WAAW;QAD/B,OAAO;OACa,WAAW,CA0C/B;IAAD,kBAAC;CA1CD,AA0CC,CA1CwC,gBAAM,GA0C9C;kBA1CoB,WAAW","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { Global } from \"../Shared/GloBal\";\r\nimport UIBase from \"../UIBase\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GetCardItem extends UIBase {\r\n    @property(cc.Sprite)\r\n    cardValueImage : cc.Sprite = null;\r\n    @property(cc.Sprite)\r\n    haveNumImage : cc.Sprite = null;\r\n\r\n    private have:number;\r\n    private cardValue:number;\r\n    private clickFun : Function;\r\n    private thisObj;\r\n    protected onLoad(): void {\r\n        \r\n    }\r\n    setData(cardValue : number , have:number=-1 , clickFun , thisObj ){\r\n        this.clickFun = clickFun;\r\n        this.have = have;\r\n        this.cardValue = cardValue;\r\n        this.thisObj = thisObj;\r\n        if(have >= 0){\r\n            this.haveNumImage.node.active = true;\r\n\t\t\tlet source : string =  \"tips/HuPaiTiShiTips/resource/game_biaoqian\" + have;\r\n            Global.Utils.setNewImageToSprite(this.haveNumImage , source);\r\n\t\t}else{\r\n\t\t\tthis.haveNumImage.node.active = false;\r\n\t\t}\r\n        let cardSource : string = \"majiongCard/resource/\" + Global.Utils.getCardStrByValue(cardValue);\r\n        Global.Utils.setNewImageToSprite(this.cardValueImage , cardSource);\r\n    }\r\n    onItemClick(){\r\n        \r\n        this.clickFun.bind(this.thisObj)(this);\r\n    }\r\n    disTory(){\r\n        super.disTory();\r\n    }\r\n    getCardNum():number{\r\n        return this.have;\r\n    }\r\n\r\n    getCardValue():number{\r\n        return this.cardValue;\r\n    }\r\n}\r\n"]}