{"version":3,"sources":["assets\\Script\\Game\\info\\UserInfo.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { CardTypeEnum } from \"../../enum/EnumManager\";\r\nimport CheckCardManager from \"../../mgr/CheckCardManager\";\r\nimport { PlayerData } from \"../../proto/LobbyMsgDef\";\r\nimport { Msg_SC_PrDiceRslt } from \"../../proto/TableMsg\";\r\nimport { Global } from \"../../Shared/GloBal\";\r\nimport Utils from \"../../Shared/Utils\";\r\nimport { HuData, ListenCard, PengGangData } from \"../../utils/InterfaceHelp\";\r\nimport GameInfo from \"./GameInfo\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class UserInfo{\r\n    private static _ins: UserInfo;\r\n    public static get ins() {\r\n        return this._ins || (this._ins = new UserInfo());\r\n    }\r\n\r\n    /**我的个人信息*/\r\n    private _myInfo: PlayerData;\r\n    public get myInfo(): PlayerData {\r\n        return this._myInfo;\r\n    }\r\n    public set myInfo(value: PlayerData) {\r\n        this._myInfo = value;\r\n    }\r\n\r\n    /***我是否是观战者*/\r\n    private _selfIsLookPlayer: boolean = true;\r\n    public get selfIsLookPlayer(): boolean {\r\n        return this._selfIsLookPlayer;\r\n    }\r\n    public set selfIsLookPlayer(value: boolean) {\r\n        this._selfIsLookPlayer = value;\r\n    }\r\n\r\n    /***是否是自己*/\r\n    public isSelf(gpid:number):boolean{\r\n        return this.myInfo.gpid == gpid;\r\n    }\r\n\r\n    /**我自己的座位*/\r\n    private _mySitIndex: number = -1;\r\n    public get mySitIndex(): number {\r\n        return this._mySitIndex;\r\n    }\r\n    public set mySitIndex(value: number) {\r\n        this._mySitIndex = value;\r\n    }\r\n\r\n    /**我自己的手牌数据*/\r\n    private _myHandCardArr: Array<number> = [];\r\n    public get myHandCardArr(): Array<number> {\r\n        return this._myHandCardArr;\r\n    }\r\n    public set myHandCardArr(value: Array<number>) {\r\n        this._myHandCardArr = value;\r\n    }\r\n    public addNewCardToMyHand (card : number){\r\n        this.myHandCardArr.push(card);\r\n        this.myHandCardArr.sort(Global.Utils.compare);\r\n        this.sortHandByDingQueed();\r\n    }\r\n    public spliceCardByMyHand(cardValue : number){\r\n        this.myHandCardArr.splice(this.myHandCardArr.indexOf(cardValue) , 1);\r\n    }\r\n    /**从某个位置删除一个手牌 number*/\r\n\tpublic spliceNumByMyCard(index:number){\r\n\t\tthis.myHandCardArr.splice(index,1);\r\n\t}\r\n\t/**从某个位置删除X个手牌 number*/\r\n\tpublic spliceNumsByMyCard(index:number , num : number){\r\n\t\tthis.myHandCardArr.splice(index,num);\r\n\t}\r\n    /***我选择的定缺类型*/\r\n    private _myDiceType: CardTypeEnum = CardTypeEnum.EndValue;\r\n    public get myDiceType(): CardTypeEnum {\r\n        return this._myDiceType;\r\n    }\r\n    public set myDiceType(value: CardTypeEnum) {\r\n        this._myDiceType = value;\r\n    }\r\n\r\n    /***我的分数*/\r\n    private _gameFen: number = 0;\r\n    public get gameFen(): number {\r\n        return this._gameFen;\r\n    }\r\n    public set gameFen(value: number) {\r\n        this._gameFen = value;\r\n    }\r\n\r\n    /**定缺完成后整理手牌*/\r\n    sortHandByDingQueed(){\r\n        let add : Array<number> = this.myHandCardArr;\r\n\t\tlet que : Array<number> = [];\r\n\t\tlet hand:Array<number> = [];\r\n\t\tfor(let i = 0 ; i < add.length ; i++){\r\n\t\t\tif(Global.Utils.getIsDice(add[i] , this.myDiceType)){\r\n\t\t\t\tque.push(add[i])\r\n\t\t\t}else{\r\n\t\t\t\thand.push(add[i]);\r\n\t\t\t}\r\n\t\t}\r\n        hand.sort(Global.Utils.compare)\r\n        que.sort(Global.Utils.compare)\r\n\t\tlet all : Array<number> = hand.concat(que);\r\n\t\tthis.myHandCardArr = all;\r\n    }\r\n    /**我的最后一张摸牌*/\r\n    private _myLastFeelCard: number = -1;\r\n    public get myLastFeelCard(): number {\r\n        return this._myLastFeelCard;\r\n    }\r\n    public set myLastFeelCard(value: number) {\r\n        this._myLastFeelCard = value;\r\n    }\r\n    /**别人的最后一张出牌*/\r\n    private _otherLastOutCard: number;\r\n    public get otherLastOutCard(): number {\r\n        return this._otherLastOutCard;\r\n    }\r\n    public set otherLastOutCard(value: number) {\r\n        this._otherLastOutCard = value;\r\n    }\r\n\t/**我的碰杠牌组数据*/\r\n\tprivate _myPengGang: Array<PengGangData> = [];\r\n    public get myPengGang(): Array<PengGangData> {\r\n        return this._myPengGang;\r\n    }\r\n    public set myPengGang(value: Array<PengGangData>) {\r\n        this._myPengGang = value;\r\n    }\r\n    public changePenggang(eatData : PengGangData){\r\n        for(let i = 0 ; i < this.myPengGang.length ; i++){\r\n            if(this.myPengGang[i].cardValue == eatData.cardValue){\r\n                this.myPengGang[i] = eatData;\r\n            }\r\n        }\r\n    }\r\n    /***当前得出牌可听*/\r\n    private _outTing: Array<ListenCard> = [];\r\n    public get outTing(): Array<ListenCard> {\r\n        return this._outTing;\r\n    }\r\n    public set outTing(value: Array<ListenCard>) {\r\n        this._outTing = value;\r\n    }\r\n    /***获取我的可操作选项*/\r\n    public getMyActionList(){\r\n\r\n    }\r\n    /**别人出牌是否需要展示过*/\r\n    public getCanGuo():boolean{\r\n        if(GameInfo.ins.remPoolsNum <= 4 && GameInfo.ins.roomTableInfo.rule.last4Hu){\r\n            return false;\r\n        }\r\n        return true;\r\n    } \r\n    /**别人出牌是否需要展示碰*/\r\n    public getCanPeng():boolean{\r\n        GameInfo.ins.checkTheirHandsPeng();\r\n        //达成过手碰条件 并且满足碰条件则可以碰\r\n        if(GameInfo.ins.isTheirHandsPeng && CheckCardManager.ins.havePengByOther()){\r\n            return true\r\n        }\r\n        return false;\r\n    } \r\n    /**别人出牌是否需要展示杠*/\r\n    public getCanGang():boolean{\r\n        if(CheckCardManager.ins.haveGangByOther()){\r\n            return true;\r\n        }\r\n        return false;\r\n    } \r\n    /**别人出牌是否需要展示胡*/\r\n    public getCanHu():HuData{\r\n        return CheckCardManager.ins.haveHuByOther();\r\n    }\r\n    /**自己摸牌师傅需要展示杠*/\r\n    public getSelfGang():Array<number>{\r\n        let arr:Array<number> = [];\r\n        arr = CheckCardManager.ins.haveGangBySelf();\r\n        \r\n        return arr;\r\n    }\r\n    public getBuGang():Array<number>{\r\n        let pengArr:Array<number> = CheckCardManager.ins.haveGangByPeng();\r\n        return pengArr;\r\n    }\r\n    /**自己摸牌时候是否需要展示胡*/\r\n    public getSelfHu():HuData{\r\n        return CheckCardManager.ins.haveHuBySelf();\r\n    }\r\n    /**补杠抢时候是否需要展示胡*/\r\n    public getQiangHu(cardValue : number):HuData{\r\n        return CheckCardManager.ins.haveQianggangHuBySelf(cardValue);\r\n    }\r\n    /***自己牌时候需要展示出牌可听*/\r\n    public getOutTing(){\r\n        let arr:Array<ListenCard> = CheckCardManager.ins.haveOutListion();\r\n        this.outTing = arr.length > 0 ? arr : null;\r\n    }\r\n    /***通过牌查找当前可听*/\r\n    public getTingByCardValue(cardValue:number):ListenCard{\r\n        if(this.outTing){\r\n            for(let i = 0 ; i < this.outTing.length ; i++){\r\n                if(this.outTing[i].outCardValue == cardValue){\r\n                    return this.outTing[i]\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**获取可出牌得类型 */\r\n    public getOutType(data:ListenCard , arr : Array<ListenCard>):number{\r\n\t\tlet nowHave : number = 4;\r\n\t\tlet nowAllFan : number = this.getMaxFan(data);\r\n\t\tif(GameInfo.ins.allOutCardArr[data.outCardValue]){\r\n\t\t\tnowHave -= GameInfo.ins.allOutCardArr[data.outCardValue];\r\n\t\t}\r\n\t\tif(nowHave <= 0){\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\tlet tingData : ListenCard;\r\n\t\tlet isMore : boolean = true;\r\n\t\tfor(let i = 0 ; i < arr.length ; i++){\r\n\t\t\tlet tempHave : number=4;\r\n\t\t\ttingData = arr[i];\r\n\t\t\tif(GameInfo.ins.allOutCardArr[tingData.outCardValue]){\r\n\t\t\t\ttempHave -= GameInfo.ins.allOutCardArr[tingData.outCardValue];\r\n\t\t\t}\r\n\t\t\tif(nowHave < tempHave){\r\n\t\t\t\tisMore = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(isMore){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet isBig : boolean = true;\r\n\t\tlet tempFan : number = 0;\r\n\t\tfor(let i = 0 ; i < arr.length ; i++){\r\n\t\t\ttingData = arr[i];\r\n\t\t\ttempFan = this.getMaxFan(tingData);\r\n\t\t\tif( nowAllFan < tempFan){\r\n\t\t\t\tisBig = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(isBig){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 3;\r\n\t}\r\n    private getMaxFan(data:ListenCard):number{\r\n\t\tlet nowFan : number = 0;\r\n\t\tfor(let i = 0 ; i < data.huData.length ; i++){\r\n\t\t\tif(data.huData[i].fanNum > nowFan){\r\n\t\t\t\tnowFan = data.huData[i].fanNum;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nowFan;\r\n\t}\r\n\r\n    /**是否还有未打出的定缺牌*/\r\n    public haveDiceCard():boolean{\r\n        for(let i = 0 ; i < this.myHandCardArr.length ; i++){\r\n\t\t\tif(Global.Utils.getIsDice(this.myHandCardArr[i] , this.myDiceType)){\r\n\t\t\t\treturn true;\t\t\r\n\t\t\t}\r\n\t\t}\r\n        return false;\r\n    }\r\n\r\n\r\n    initOver(){\r\n        this.myHandCardArr = [];\r\n        this.myDiceType = -1;\r\n        this.myLastFeelCard = -1;\r\n        this.otherLastOutCard = -1;\r\n        this.myPengGang = [];\r\n    }\r\n}   \r\n\r\n/**定位骰子保存*/\r\nexport class PrDiceRsltData{\r\n\tplayerId : number;\r\n\tmsg : Msg_SC_PrDiceRslt;\r\n}\r\n"]}