{"version":3,"sources":["assets\\Script\\com\\http\\HttpRequest.ts"],"names":[],"mappings":";;;;AAAA,iCAAiC;AACjC,UAAU;AACV,+CAA+C;AAC/C,UAAU;AACV,qBAAqB;AACrB,UAAU;AACV,uFAAuF;AACvF,yDAAyD;AACzD,8CAA8C;AAC9C,UAAU;AACV,4BAA4B;AAC5B,UAAU;AACV,+CAA+C;AAC/C,8CAA8C;AAC9C,UAAU;AACV,uBAAuB;AACvB,UAAU;AACV,kGAAkG;AAClG,wBAAwB;AACxB,UAAU;AACV,gCAAgC;AAChC,UAAU;AACV,uBAAuB;AACvB,+CAA+C;AAC/C,2CAA2C;AAC3C,4DAA4D;AAC5D,UAAU;AACV,gDAAgD;AAChD,UAAU;AACV,eAAe;AACf,6BAA6B;AAC7B,UAAU;AACV,8BAA8B;AAC9B,UAAU;AACV,4BAA4B;AAC5B,UAAU;AACV,qBAAqB;AACrB,UAAU;AACV,6CAA6C;AAC7C,UAAU;AACV,uCAAuC;AACvC,UAAU;AACV,yDAAyD;AACzD,oCAAoC;AACpC,kCAAkC;AAClC,UAAU;AACV,6DAA6D;AAC7D,UAAU;AACV,gDAAgD;AAChD,iCAAiC;AACjC,UAAU;AACV,gDAAgD;AAChD,IAAI","file":"","sourceRoot":"/","sourcesContent":["// export interface HttpRequest {\r\n//     /**\r\n//      * 本次请求返回的数据，数据类型根据 responseType 设置的值确定。\r\n//      */\r\n//     response: any;\r\n//     /**\r\n//      * 设置返回的数据格式为文本（HttpResponseType.TEXT）还是二进制数据（HttpResponseType.ArrayBuffer）<br/>\r\n//      * 注意：若尝试设置此属性为一个非法的值，运行时将使用HttpResponseType.TEXT。\r\n//      * @default egret.HttpResponseType.TEXT\r\n//      */\r\n//     responseType: string;\r\n//     /**\r\n//      * 代表着一个请求在被自动终止前所消耗的毫秒数。默认值为 0，意味着没有超时。\r\n//      * @default egret.HttpResponseType.TEXT\r\n//      */\r\n//     timeout: number;\r\n//     /**\r\n//      * 表明在进行跨站(cross-site)的访问控制(Access-Control)请求时，是否使用认证信息(例如cookie或授权的header)。(这个标志不会影响同站的请求)\r\n//      * @default false\r\n//      */\r\n//     withCredentials: boolean;\r\n//     /**\r\n//      * 初始化一个请求.<br/>\r\n//      * 注意: 若在已经发出请求的对象上调用此方法，相当于立即调用abort().\r\n//      * @param url 该请求所要访问的URL该请求所要访问的URL\r\n//      * @param method 请求所使用的HTTP方法， 请使用 HttpMethod 定义的枚举值.\r\n//      */\r\n//     open(url: string, method?: string): void;\r\n//     /**\r\n//      * 发送请求.\r\n//      * @param data 需要发送的数据\r\n//      */\r\n//     send(data?: any): void;\r\n//     /**\r\n//      * 如果请求已经被发送,则立刻中止请求.\r\n//      */\r\n//     abort(): void;\r\n//     /**\r\n//      * 返回所有响应头信息(响应头名和值), 如果响应头还没接受,则返回\"\".\r\n//      */\r\n//     getAllResponseHeaders(): string;\r\n//     /**\r\n//      * 给指定的HTTP请求头赋值.在这之前,您必须确认已经调用 open() 方法打开了一个url.\r\n//      * @param header 将要被赋值的请求头名称.\r\n//      * @param value 给指定的请求头赋的值.\r\n//      */\r\n//     setRequestHeader(header: string, value: string): void;\r\n//     /**\r\n//      * 返回指定的响应头的值, 如果响应头还没被接受,或该响应头不存在,则返回\"\".\r\n//      * @param header 要返回的响应头名称\r\n//      */\r\n//     getResponseHeader(header: string): string\r\n// }"]}