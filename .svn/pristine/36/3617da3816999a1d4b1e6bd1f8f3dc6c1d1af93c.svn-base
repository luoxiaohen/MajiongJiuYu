"use strict";
cc._RF.push(module, '6916dl+huhDJJ30UL/poqVy', 'MainGamePanel');
// Script/UI/MainGamePanel.ts

"use strict";
/*
 * @Author: error: git config user.name && git config user.email & please set dead value or install git
 * @Date: 2022-10-08 09:24:45
 * @LastEditors: error: git config user.name && git config user.email & please set dead value or install git
 * @LastEditTime: 2022-11-18 18:15:30
 * @FilePath: \MajiongJiuYu\assets\Script\UI\MainGamePanel.ts
 * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
 */
// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var EventType_1 = require("../event/EventType");
var GloBal_1 = require("../Shared/GloBal");
var GMTips_1 = require("../tips/GMTips");
var UIBase_1 = require("../UIBase");
var MajiongTablePanel_1 = require("./MajiongTablePanel");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var MainGamePanel = /** @class */ (function (_super) {
    __extends(MainGamePanel, _super);
    function MainGamePanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tipsLayer = null;
        return _this;
    }
    MainGamePanel.prototype.onLoad = function () {
        GloBal_1.Global.DialogManager.init(this.node);
        this.onCreateOneRoom();
        cc.tween(this.node).delay(3).call(function () {
            // this.showTest();
        }).start();
        this.addEvent();
        cc.systemEvent.on("keydown", this.onKeyDown, this);
    };
    MainGamePanel.prototype.onKeyDown = function (e) {
        var _this = this;
        if (e.keyCode == 192) {
            if (this.gm) {
                this.gm.disTory();
                this.gm = null;
            }
            else {
                GloBal_1.Global.DialogManager.createDialog('tips/GM/prefab/GMTips', null, function (any, createDialog) {
                    createDialog.x = -450;
                    createDialog.y = -320;
                    _this.gm = createDialog.getComponent(GMTips_1.default);
                    _this.gm.onRemove(function () {
                        _this.gm = null;
                    });
                }, this.tipsLayer);
            }
        }
    };
    MainGamePanel.prototype.showTest = function () {
        GloBal_1.Global.DialogManager.createDialog('smallOver/prefab/SmallOverPanel', null, function (any, createDialog) {
            createDialog.x = -960;
            createDialog.y = -540;
        });
    };
    MainGamePanel.prototype.addEvent = function () {
        GloBal_1.Global.EventCenter.addEventListener(EventType_1.default.BackToLobby, this.onBackToLobby, this);
        GloBal_1.Global.EventCenter.addEventListener(EventType_1.default.GET_NEW_ROOM_INFO, this.onCreateOneRoom, this);
        GloBal_1.Global.EventCenter.addEventListener(EventType_1.default.GameInviteMsg, this.onGameInvite, this);
    };
    MainGamePanel.prototype.removeEevnt = function () {
        GloBal_1.Global.EventCenter.removeEventListener(EventType_1.default.BackToLobby, this.onBackToLobby, this);
        GloBal_1.Global.EventCenter.removeEventListener(EventType_1.default.GET_NEW_ROOM_INFO, this.onCreateOneRoom, this);
        GloBal_1.Global.EventCenter.removeEventListener(EventType_1.default.GameInviteMsg, this.onGameInvite, this);
    };
    MainGamePanel.prototype.onBackToLobby = function () {
        cc.director.loadScene("majiong");
        this.desTory();
    };
    MainGamePanel.prototype.onCreateOneRoom = function () {
        var _this = this;
        if (this.majiongTablePanel) {
            this.majiongTablePanel.disTory();
            this.majiongTablePanel = null;
        }
        GloBal_1.Global.DialogManager.createDialog('mainGame/prefab/MajiongTablePanel', null, function (any, createDialog) {
            createDialog.x = 0;
            createDialog.y = 0;
            _this.majiongTablePanel = createDialog.getComponent(MajiongTablePanel_1.default);
        });
    };
    MainGamePanel.prototype.onGameInvite = function () {
        GloBal_1.Global.DialogManager.createDialog("smallOver/prefab/InviteToRoomPannel", null, function (any, dialog) {
            dialog.x = 0;
            dialog.y = 0;
        });
    };
    MainGamePanel.prototype.desTory = function () {
        _super.prototype.destroy.call(this);
        this.removeEevnt();
    };
    __decorate([
        property(cc.Node)
    ], MainGamePanel.prototype, "tipsLayer", void 0);
    MainGamePanel = __decorate([
        ccclass
    ], MainGamePanel);
    return MainGamePanel;
}(UIBase_1.default));
exports.default = MainGamePanel;

cc._RF.pop();